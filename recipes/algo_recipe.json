[
    {
        "id": "algo_root",
        "repeatable": false,
        "desc": "algorithm core description",
        "annotations" : [
            {"type": "REF", "ref" :"recpp.internal", "msg": "check the impl recipe for performance critical algorithms"},
            {"type": "REF", "ref" :"recpp.internal", "msg": "check the impl recipe if concurrency is involved in an algorithm"},
            {"type": "PERF", "ref" :"recpp.internal", "msg": "choose algorithms that suit no more than your needs to avoid useless performance loss"},
            {"type": "PERF", "ref" :"CCS.7", "msg": "avoid worse than linear algorithm if possible"},
            {"type": "PERF,REL", "ref" :"CCS.84", "msg": "prefer algorithm to handwritten loops (e.g. std::transform, std::for_each, std::ranges...)"},
            {"type": "MAINT,PERF,", "ref" :"recpp.internal", "msg": "prefer algorithms implemented as data structure members when available"},
            {"type": "PERF", "ref" :"recpp.internal", "msg": "try to order the algorithm computations for best use of the cache"},
            {"type": "PERF", "ref" :"recpp.internal", "msg": "avoid virtual call in algorithms traversal loop"},
            {"type": "REL", "ref" :"recpp.internal", "msg": "use auto&& generic container traversal in algorithm range-based for loop"}
        ],
        "steps" : [
            {"id" :"primary_concern", "desc": "primary concern for algorithm", "ref": "recpp.internal"},
            {"id" :"find", "desc": "find details", "ref": "recpp.internal,CCS.85"},
            {"id" :"sort", "desc": "sort details", "ref": "recpp.internal,CCS.86"},
            {"id" :"traversal", "desc": "traversal details", "ref": "recpp.internal"}
        ]
    }
]